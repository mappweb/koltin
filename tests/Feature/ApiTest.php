<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
use App\Models\User;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class ApiTest extends TestCase
{
    use WithFaker;

    /**
     * @var string|\Laravel\Sanctum\string
     */
    protected string $token;

    /**
     * Setup the test environment.
     *
     * @return void
     */
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $email = $this->faker->safeEmail();
        $password = "Qa1234@";

        /**
         * @var User $user
         */
        $user = User::factory(
            [
                'first_name' => $this->faker->firstName(),
                'last_name' => $this->faker->lastName(),
                'email' => $email,
                'password' => $password,
            ]
        )->create();

        $this->token = $user->createToken('ApiToken')->plainTextToken;
    }

    /**
     * Get all posts.
     *
     * @return void
     */
    public function test_get_all_post_successful_response()
    {
        $response = $this->get('/api/v1/posts', ['Authorization' => 'Bearer ' . $this->token]);
        $response->assertStatus(200);
    }

    /**
     * Get all users.
     *
     * @return void
     */
    public function test_get_all_users_successful_response()
    {
        $response = $this->get('/api/v1/authors', ['Authorization' => 'Bearer ' . $this->token]);
        $response->assertStatus(200);
    }

    /**
     * Create posts.
     *
     * @return void
     */
    public function test_create_post_successful_response()
    {
        $response = $this->post('/api/v1/posts', [
            'title' => $this->faker->title(),
            'content' => $this->faker->text(),
        ], ['Authorization' => 'Bearer ' . $this->token]);
        $response->assertStatus(200);
    }
}
